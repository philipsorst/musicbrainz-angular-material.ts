name: CI

on:
    push:
        branches:
            - master

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v2
            -   name: Get yarn cache directory path
                id: yarn-cache-dir-path
                run: echo "::set-output name=dir::$(yarn cache dir)"
            -   name: Cache Yarn
                uses: actions/cache@v2
                id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
                with:
                    path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                    key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-yarn-
            -   name: Use Node 12.x
                uses: actions/setup-node@v1
                with:
                    node-version: '12.x'
            -   name: Install dependencies
                run: yarn install
            -   name: Generate icons
                run: yarn icons
            -   name: Build Prod
                run: yarn ng build --configuration production --base-href=https://apps.dontdrinkandroot.net/musicbrainz-browser/
            -   name: Archive build
                if: success()
                uses: actions/upload-artifact@v1
                with:
                    name: deploy_dist
                    path: dist
    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
            -   name: Checkout
                uses: actions/checkout@v2
            -   name: Download build
                uses: actions/download-artifact@v2
                with:
                    name: deploy_dist
                    path: dist
            -   name: Find
                run: find
            -   name: Rsync to server
                uses: burnett01/rsync-deployments@4.1
                with:
                    switches: -avz --delete
                    path: dist/
                    remote_path: ${{ secrets.DEPLOY_PATH }}
                    remote_host: ${{ secrets.DEPLOY_HOST }}
                    remote_user: ${{ secrets.DEPLOY_USER }}
                    remote_key: ${{ secrets.DEPLOY_KEY }}
